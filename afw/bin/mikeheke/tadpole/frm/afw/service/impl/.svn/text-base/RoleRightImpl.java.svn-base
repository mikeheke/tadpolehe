package mikeheke.tadpole.frm.afw.service.impl;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.springframework.transaction.annotation.Transactional;

import mikeheke.tadpole.frm.afw.dao.IModuleDao;
import mikeheke.tadpole.frm.afw.dao.IRoleRightDao;
import mikeheke.tadpole.frm.afw.entity.Application;
import mikeheke.tadpole.frm.afw.entity.Module;
import mikeheke.tadpole.frm.afw.entity.Role;
import mikeheke.tadpole.frm.afw.entity.RoleRight;
import mikeheke.tadpole.frm.afw.service.RoleRightService;
import mikeheke.tadpole.frm.afw.util.AfwConstant;
import mikeheke.tadpole.frm.afw.vo.SysInfoBean;
import mikeheke.tadpole.frm.base.service.impl.BaseImpl;
import mikeheke.tadpole.frm.base.vo.ReturnMessage;
import mikeheke.tadpole.frm.exception.exception.AmwaySysException;

/**
 * 
 * @author lenovo
 *
 */
public class RoleRightImpl extends BaseImpl implements RoleRightService{

	private IRoleRightDao roleRightDao;
	
	private IModuleDao moduleDao;

	/* (non-Javadoc)
	 * @see mikeheke.tadpole.frm.afw.services.RoleRightService#copyRight(mikeheke.tadpole.frm.afw.entity.Role, mikeheke.tadpole.frm.afw.entity.Role)
	 */
	@Transactional
	@Override
	public ReturnMessage<RoleRight> copyRight(Role desRole, Role srcRole) {
		
		ReturnMessage<RoleRight> roleRights = new ReturnMessage<RoleRight>();
		try {
			List<Module> srcModules = moduleDao.getRights(srcRole);
			List<Module> desModules = moduleDao.getRights(desRole);
			for(Module srcModule: srcModules){
				if(desModules.contains(srcModule)){
					continue;
				}
				desModules.add(srcModule);
			}
			roleRights = this.disRights(desRole, desModules);
			roleRights.clearReturnMsg();
			if(roleRights.isSuccess()){
				final String msg = "权限复制成功";
				roleRights.setReturnMsg(msg);
			}else{
				final String msg = "权限复制失败";
				roleRights.setReturnMsg(msg);
			}

		} catch (SQLException e) {
			throw new AmwaySysException(e);
		}

		return roleRights;
	}

	/* (non-Javadoc)
	 * @see mikeheke.tadpole.frm.afw.services.RoleRightService#disRights(mikeheke.tadpole.frm.afw.entity.Role, java.util.List)
	 */
	@Transactional
	@Override
	public ReturnMessage<RoleRight> disRights(Role role, List<Module> modules) {
		
		ReturnMessage<RoleRight> returnMessage = new ReturnMessage<RoleRight>();
		
		try {
			roleRightDao.deleteRightsByRole(role);
			List<RoleRight> roleRightAdds = this.getRoleRightList(role, modules);
			
			for(RoleRight rr:roleRightAdds){
				if(rr.getRoleRightId()==null){
					rr.setRoleRightId(roleRightDao.generateSequence("MSTB_ROLE_RIGHT"));
				}
			}
			
			List<RoleRight> roleRightRets = roleRightDao.saveOrUpdateList(roleRightAdds);
			
			returnMessage.setReturnObjects(roleRightRets);
			final String msg = "角色权限分配成功";
			returnMessage.setReturnMsg(msg);
			returnMessage.setReturnCode(ReturnMessage.SUCCESS_CODE);
		} catch (SQLException e) {
			throw new AmwaySysException(e);
		}

		return returnMessage;
	}
	
	/*
	 * 生成权限
	 */
	private List<RoleRight> getRoleRightList(Role role, List<Module> modules){
		
		List<RoleRight> roleRights = new ArrayList<RoleRight>();
		for(Module module: modules){
			RoleRight roleRight = new RoleRight();
			roleRight.setRoleId(role.getRoleId());
			roleRight.setModuleId(module.getModuleId());
			roleRights.add(roleRight);
		}
		
		return roleRights;
	}

	/* (non-Javadoc)
	 * @see mikeheke.tadpole.frm.afw.services.RoleRightService#getMRightList(java.util.List)
	 */
	@Override
	public ReturnMessage<Module> getMRightList(List<Role> roles, Application application) {
		
		ReturnMessage<Module> returnMessage = null;
	
		if(SysInfoBean.getSysInfoBean().isSuperRole(roles)){
			returnMessage = getRightList(application);
		}else{
			returnMessage = getRightList(roles);
		}
		
		if(!returnMessage.isSuccess()){
			return returnMessage;
		}
		
		List<Module> allModules = returnMessage.getReturnObjects();
		List<Module> modules = new ArrayList<Module>();
		for(Module module: allModules){
			if(null != module.getIsModuleOrButton()
					&& module.getIsModuleOrButton().intValue() == AfwConstant.MODULE_TYPE_B.intValue()
					&& null != module.getIsSeed()
					&& module.getIsSeed().intValue() == AfwConstant.YES.intValue()){
				continue;
			}
			modules.add(module);
		}
		
		returnMessage.clearReturnObjects();
		returnMessage.setReturnObjects(modules);
		returnMessage.setReturnCode(ReturnMessage.SUCCESS_CODE);
		
		return returnMessage;
	}

	/**
	 * 取角色权限
	 * @param role
	 */
	@Override
	public ReturnMessage<Module> getRightList(Role role) {
		ReturnMessage<Module> returnMessage = new ReturnMessage<Module>();
		
		try {
			List<Module> modules = moduleDao.getRights(role);
			returnMessage.setReturnObjects(modules);
			returnMessage.setReturnCode(ReturnMessage.SUCCESS_CODE);
		} catch (SQLException e) {
			throw new AmwaySysException(e);
		}
		
		return returnMessage;
	}

	/**
	 * 取角色集权限(过滤重复权限)
	 * @param roles
	 */
	@Override
	public ReturnMessage<Module> getRightList(List<Role> roles) {
		
		ReturnMessage<Module> returnMessage = new ReturnMessage<Module>();
		
		Set<Module> modulesRet = new HashSet<Module>();
		
		try {
			for(Role role: roles){
				List<Module> modules = moduleDao.getRights(role);
				modulesRet.addAll(modules);
			}
		} catch (SQLException e) {
			throw new AmwaySysException(e);
		}
		
		returnMessage.setReturnObjects(modulesRet);
		returnMessage.setReturnCode(ReturnMessage.SUCCESS_CODE);
		
		return returnMessage;
	}
	
	/**
	 * 取应用权限
	 * @param application
	 */
	@Override
	public ReturnMessage<Module> getRightList(Application application) {
		
		ReturnMessage<Module> returnMessage = new ReturnMessage<Module>();
		
		try {
			List<Module> modules = moduleDao.getRights(application);
			returnMessage.setReturnObjects(modules);
			returnMessage.setReturnCode(ReturnMessage.SUCCESS_CODE);
		} catch (SQLException e) {
			throw new AmwaySysException(e);
		}
		
		return returnMessage;
	}
	
	public void setRoleRightDao(IRoleRightDao roleRightDao) {
		this.roleRightDao = roleRightDao;
	}

	public void setModuleDao(IModuleDao moduleDao) {
		this.moduleDao = moduleDao;
	}

}
